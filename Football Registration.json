{"files":[{"id":"92ca4460-43a0-49ad-b9b0-f7d9570ab7ae","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"Asia/Kolkata\",\n  \"dependencies\": {},\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\",\n  \"webapp\": {\n    \"executeAs\": \"USER_DEPLOYING\",\n    \"access\": \"ANYONE_ANONYMOUS\"\n  }\n}"},{"id":"77c54d64-4bc0-4bec-bfae-3c15cdbbd465","name":"Code","type":"server_js","source":"function doGet() {\n  const html \u003d HtmlService.createTemplateFromFile(\u0027form\u0027)\n    .evaluate()\n    .setTitle(\u0027Football Team Registration\u0027)\n    .setSandboxMode(HtmlService.SandboxMode.IFRAME);\n    \n  const css \u003d HtmlService.createHtmlOutputFromFile(\u0027css\u0027).getContent();\n  return html.setContent(`\u003cstyle\u003e${css}\u003c/style\u003e${html.getContent()}`);\n}\n\n/**\n * Get names for the given hall.\n * For hall \"10\", returns names from Sheet2; for hall \"11\" from Sheet3; for hall \"14\" from Sheet4.\n * Each sheet is assumed to have 4 columns: Name, Roll Number, Room Number, Hall.\n * Only rows matching the requested hall are returned as an array of [Name, Roll Number, Room Number].\n */\nfunction getNamesForHall(hall) {\n  const spreadsheetUrl \u003d \u0027https://docs.google.com/spreadsheets/d/1Y2v8G4G6jR_tyH672UoWsownXT6fCLPnTLWihnD_RBI/edit\u0027;\n  const spreadsheet \u003d SpreadsheetApp.openByUrl(spreadsheetUrl);\n  let sheet;\n  if (hall \u003d\u003d\u003d \"10\") {\n    sheet \u003d spreadsheet.getSheetByName(\"sheet2\");\n  } else if (hall \u003d\u003d\u003d \"11\") {\n    sheet \u003d spreadsheet.getSheetByName(\"sheet3\");\n  } else if (hall \u003d\u003d\u003d \"14\") {\n    sheet \u003d spreadsheet.getSheetByName(\"sheet4\");\n  } else {\n    throw new Error(\"Invalid hall selection: \" + hall);\n  }\n  if (!sheet) {\n    throw new Error(\"Sheet not found for hall \" + hall);\n  }\n  const data \u003d sheet.getRange(2, 1, sheet.getLastRow() - 1, 4).getValues();\n  // Filter rows to ensure the Hall column (index 3) matches the selected hall.\n  const filtered \u003d data.filter(row \u003d\u003e row[3] \u003d\u003d hall);\n  // Return only [Name, Roll Number, Room Number]\n  return filtered.map(row \u003d\u003e [row[0], row[1], row[2]]);\n}\n\n/**\n * Save the team data.\n * Expected header row in Sheet1:\n * [\u0027Team Name\u0027, \u0027Hall\u0027, \u0027Name\u0027, \u0027Roll Number\u0027, \u0027Room Number\u0027, \u0027WhatsApp Number\u0027, \u0027Email ID\u0027, \u0027Role\u0027, \u0027Timestamp\u0027]\n */\nfunction saveData(teamName, hall, captainDetails, playersDetails) {\n  const spreadsheetUrl \u003d \u0027https://docs.google.com/spreadsheets/d/1Y2v8G4G6jR_tyH672UoWsownXT6fCLPnTLWihnD_RBI/edit\u0027;\n  const spreadsheet \u003d SpreadsheetApp.openByUrl(spreadsheetUrl);\n  const sheet1 \u003d spreadsheet.getSheetByName(\u0027sheet1\u0027);\n  if (!sheet1) {\n    throw new Error(\u0027Sheet1 not found!\u0027);\n  }\n  \n  const expectedHeader \u003d [\u0027Team Name\u0027, \u0027Hall\u0027, \u0027Name\u0027, \u0027Roll Number\u0027, \u0027Room Number\u0027, \u0027WhatsApp Number\u0027, \u0027Email ID\u0027, \u0027Role\u0027, \u0027Timestamp\u0027];\n  let headerMismatch \u003d false;\n  \n  if (sheet1.getLastRow() \u003d\u003d\u003d 0) {\n    headerMismatch \u003d true;\n  } else {\n    const headerValues \u003d sheet1.getRange(1, 1, 1, expectedHeader.length).getValues()[0];\n    if (headerValues.length !\u003d\u003d expectedHeader.length) {\n      headerMismatch \u003d true;\n    } else {\n      for (let i \u003d 0; i \u003c expectedHeader.length; i++) {\n        if (headerValues[i] !\u003d\u003d expectedHeader[i]) {\n          headerMismatch \u003d true;\n          break;\n        }\n      }\n    }\n  }\n  \n  if (headerMismatch) {\n    sheet1.clear();\n    sheet1.appendRow(expectedHeader);\n  }\n  \n  // Save captain\u0027s details.\n  sheet1.appendRow([\n    teamName,\n    hall,\n    captainDetails[0],\n    captainDetails[1],\n    captainDetails[2],\n    captainDetails[3],\n    captainDetails[4],\n    \u0027Captain\u0027,\n    new Date()\n  ]);\n  \n  // Save each player\u0027s details.\n  playersDetails.forEach(function(player) {\n    sheet1.appendRow([\n      teamName,\n      hall,\n      player[0],\n      player[1],\n      player[2],\n      \u0027\u0027,\n      \u0027\u0027,\n      \u0027Player\u0027,\n      new Date()\n    ]);\n  });\n}\n\n/**\n * Get registered teams from Sheet1 by grouping rows based on Team Name.\n * For each team, extract the hall (from column 2), the captainâ€™s name (row where Role \u003d\u003d\u003d \"Captain\", column 3),\n * and an array of player names (from rows where Role \u003d\u003d\u003d \"Player\", column 3).\n */\nfunction getRegisteredTeams() {\n  try {\n    const spreadsheetUrl \u003d \u0027https://docs.google.com/spreadsheets/d/1Y2v8G4G6jR_tyH672UoWsownXT6fCLPnTLWihnD_RBI/edit\u0027;\n    const spreadsheet \u003d SpreadsheetApp.openByUrl(spreadsheetUrl);\n    const sheet1 \u003d spreadsheet.getSheetByName(\u0027sheet1\u0027);\n    if (!sheet1) {\n      throw new Error(\u0027Sheet1 not found!\u0027);\n    }\n    const data \u003d sheet1.getDataRange().getValues();\n    if (data.length \u003c 2) return [];\n    \n    const teamsMap \u003d {};\n    // Skip header row (index 0)\n    for (let i \u003d 1; i \u003c data.length; i++) {\n      const row \u003d data[i];\n      const teamName \u003d row[0];\n      const hall \u003d row[1];\n      if (!teamName) continue;\n      if (!teamsMap[teamName]) {\n        teamsMap[teamName] \u003d { hall: hall, captain: null, players: [] };\n      }\n      const role \u003d row[7];\n      if (role \u003d\u003d\u003d \"Captain\") {\n        teamsMap[teamName].captain \u003d row[2]; // Captain\u0027s name (column 3)\n      } else if (role \u003d\u003d\u003d \"Player\") {\n        teamsMap[teamName].players.push(row[2]); // Player\u0027s name (column 3)\n      }\n    }\n    \n    const teams \u003d [];\n    for (const t in teamsMap) {\n      teams.push({\n        teamName: t,\n        hall: teamsMap[t].hall,\n        captainName: teamsMap[t].captain,\n        players: teamsMap[t].players\n      });\n    }\n    return teams;\n  } catch (e) {\n    Logger.log(\"Error in getRegisteredTeams: \" + e);\n    return [];\n  }\n}\n"},{"id":"1a1f5b22-49aa-4512-b492-c7a9c3b0c4c1","name":"form","type":"html","source":"\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n  \u003chead\u003e\n    \u003ctitle\u003eFootball Team Registration\u003c/title\u003e\n    \u003cscript\u003e\n      let playerCount \u003d 0; // Counter for player rows\n\n      // When the hall selection changes, update the autocomplete datalist.\n      function updateNamesBasedOnHall() {\n        const hall \u003d document.getElementById(\"captain-hall\").value;\n        google.script.run.withSuccessHandler(fillDropdown).getNamesForHall(hall);\n      }\n\n      // Build the datalist for name inputs using the provided data array ([Name, Roll Number, Room Number])\n      function fillDropdown(data) {\n        let dropdown \u003d document.getElementById(\"name-list\");\n        if (!dropdown) {\n          dropdown \u003d document.createElement(\"datalist\");\n          dropdown.id \u003d \"name-list\";\n          document.body.appendChild(dropdown);\n        } else {\n          dropdown.innerHTML \u003d \"\";\n        }\n        data.forEach(function(row) {\n          const option \u003d document.createElement(\"option\");\n          option.value \u003d row[0];\n          option.textContent \u003d `(${row[1]}) - ${row[2]}`;\n          option.dataset.roll \u003d row[1];\n          option.dataset.room \u003d row[2];\n          dropdown.appendChild(option);\n        });\n        // Attach the datalist to every .name-input field.\n        document.querySelectorAll(\".name-input\").forEach(function(input) {\n          input.setAttribute(\"list\", \"name-list\");\n          input.addEventListener(\"input\", function() {\n            const selectedOption \u003d Array.from(dropdown.children).find(function(option) {\n              return option.value \u003d\u003d\u003d input.value;\n            });\n            const parent \u003d input.closest(\".row\");\n            if (selectedOption) {\n              parent.querySelector(\".roll-input\").value \u003d selectedOption.dataset.roll;\n              parent.querySelector(\".room-input\").value \u003d selectedOption.dataset.room;\n            } else {\n              parent.querySelector(\".roll-input\").value \u003d \"\";\n              parent.querySelector(\".room-input\").value \u003d \"\";\n            }\n          });\n        });\n      }\n\n      // Add a new player (or substitute) row.\n      function addPlayerRow() {\n        if (playerCount \u003e\u003d 10) {\n          alert(\"You cannot add more than 10 players.\");\n          return;\n        }\n        playerCount++;\n        const container \u003d document.getElementById(\"players-container\");\n        const row \u003d document.createElement(\"div\");\n        row.className \u003d \"row\";\n        const labelText \u003d playerCount \u003c\u003d 7 ? `Player ${playerCount}:` : `Substitute ${playerCount - 7}:`;\n        row.innerHTML \u003d `\n          \u003clabel\u003e${labelText}\u003c/label\u003e\n          \u003cinput type\u003d\"text\" class\u003d\"name-input\" placeholder\u003d\"Type or select a name...\" required /\u003e\n          \u003clabel\u003eRoll Number:\u003c/label\u003e\n          \u003cinput type\u003d\"text\" class\u003d\"roll-input\" placeholder\u003d\"Auto-filled or enter manually\" /\u003e\n          \u003clabel\u003eRoom Number:\u003c/label\u003e\n          \u003cinput type\u003d\"text\" class\u003d\"room-input\" placeholder\u003d\"Auto-filled or enter manually\" /\u003e\n          \u003cbutton type\u003d\"button\" onclick\u003d\"removeRow(this)\"\u003eRemove\u003c/button\u003e\n        `;\n        container.appendChild(row);\n        updateNamesBasedOnHall(); // Update datalist using current hall.\n      }\n\n      // Remove a player row.\n      function removeRow(button) {\n        const row \u003d button.closest(\".row\");\n        row.remove();\n        playerCount--;\n        updatePlayerNumbers();\n      }\n\n      // Update row labels (Player vs. Substitute) after a removal.\n      function updatePlayerNumbers() {\n        const rows \u003d document.querySelectorAll(\"#players-container .row\");\n        rows.forEach(function(row, index) {\n          const labelText \u003d index \u003c 7 ? `Player ${index + 1}:` : `Substitute ${index - 7 + 1}:`;\n          row.querySelector(\"label\").textContent \u003d labelText;\n        });\n      }\n\n      // Load registered teams (aggregated) and display them as a list.\n      function loadRegisteredTeams() {\n        google.script.run.withSuccessHandler(displayRegisteredTeams).getRegisteredTeams();\n      }\n\n      // Display the registered teams as a list of blocks.\n      function displayRegisteredTeams(teams) {\n        const container \u003d document.getElementById(\"registered-teams\");\n        if (!teams || teams.length \u003d\u003d\u003d 0) {\n          container.innerHTML \u003d \"\u003cp\u003eNo teams registered yet.\u003c/p\u003e\";\n          return;\n        }\n        let html \u003d \"\";\n        teams.forEach(function(team) {\n          html +\u003d `\u003cdiv class\u003d\"team-item\"\u003e\n                     \u003ch3\u003e${team.teamName}\u003c/h3\u003e\n                     \u003cp\u003e\u003cstrong\u003eHall:\u003c/strong\u003e ${team.hall}\u003c/p\u003e\n                     \u003cp\u003e\u003cstrong\u003eCaptain:\u003c/strong\u003e ${team.captainName || \"N/A\"}\u003c/p\u003e\n                     \u003cp\u003e\u003cstrong\u003ePlayers:\u003c/strong\u003e\u003c/p\u003e\n                     \u003cul\u003e`;\n          team.players.forEach(function(player) {\n            html +\u003d `\u003cli\u003e${player}\u003c/li\u003e`;\n          });\n          html +\u003d `\u003c/ul\u003e\n                   \u003c/div\u003e`;\n        });\n        container.innerHTML \u003d html;\n      }\n\n      // Save the registration form data.\n      function saveTeamData() {\n        const teamName \u003d document.getElementById(\"team-name\").value;\n        if (!teamName) {\n          alert(\"Team Name is required!\");\n          return;\n        }\n        const hall \u003d document.getElementById(\"captain-hall\").value;\n        const captainRow \u003d document.getElementById(\"captain-row\");\n        const captainDetails \u003d [\n          captainRow.querySelector(\".name-input\").value,\n          captainRow.querySelector(\".roll-input\").value,\n          captainRow.querySelector(\".room-input\").value,\n          captainRow.querySelector(\".whatsapp-input\").value,\n          captainRow.querySelector(\".email-input\").value\n        ];\n        if (captainDetails.includes(\"\")) {\n          alert(\"All captain fields are mandatory!\");\n          return;\n        }\n        const playerRows \u003d document.querySelectorAll(\"#players-container .row\");\n        const playersDetails \u003d Array.from(playerRows).map(function(row) {\n          const name \u003d row.querySelector(\".name-input\").value;\n          const roll \u003d row.querySelector(\".roll-input\").value;\n          const room \u003d row.querySelector(\".room-input\").value;\n          if (!name || !roll || !room) {\n            alert(\"All player fields are mandatory!\");\n            throw new Error(\"Missing player field(s)\");\n          }\n          return [name, roll, room];\n        });\n        if (playersDetails.length \u003c 7) {\n          alert(\"You must enter at least 7 players!\");\n          return;\n        }\n        google.script.run.saveData(teamName, hall, captainDetails, playersDetails);\n        document.getElementById(\"registration-container\").innerHTML \u003d `\n          \u003ch1\u003eThank you for your response!\u003c/h1\u003e\n          \u003cp\u003eYour sports secretary will be contacted for further details.\u003c/p\u003e\n        `;\n        loadRegisteredTeams();\n      }\n\n      // Initialize the registration form with 7 player rows.\n      function initializePlayerRows() {\n        const container \u003d document.getElementById(\"players-container\");\n        container.innerHTML \u003d \"\";\n        playerCount \u003d 0;\n        for (let i \u003d 0; i \u003c 7; i++) {\n          addPlayerRow();\n        }\n      }\n\n      // Validate the captain\u0027s WhatsApp input (allow only digits, up to 10 digits).\n      function validateWhatsapp(event) {\n        const input \u003d event.target;\n        input.value \u003d input.value.replace(/[^\\d]/g, \u0027\u0027).substring(0, 10);\n      }\n\n      // Function to hide the splash screen and show the registration form.\n      function enterRegistration() {\n        document.getElementById(\"splash-screen\").style.display \u003d \"none\";\n        document.getElementById(\"registration-container\").style.display \u003d \"block\";\n      }\n\n      window.onload \u003d function() {\n        // Initially, show splash screen; hide the registration form.\n        document.getElementById(\"registration-container\").style.display \u003d \"none\";\n        updateNamesBasedOnHall();\n        initializePlayerRows();\n        loadRegisteredTeams();\n        document.querySelector(\".whatsapp-input\").addEventListener(\"input\", validateWhatsapp);\n      };\n    \u003c/script\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003c!-- Splash Screen Container --\u003e\n    \u003cdiv id\u003d\"splash-screen\"\u003e\n      \u003ch1 class\u003d\"splash-title\"\u003eFootball Registration Form\u003cbr\u003eHall 10 and 11 Welcomes You\u003c/h1\u003e\n      \u003cbutton id\u003d\"enter-btn\" onclick\u003d\"enterRegistration()\"\u003eEnter Registration\u003c/button\u003e\n    \u003c/div\u003e\n    \n    \u003c!-- Registration Form Container --\u003e\n    \u003cdiv id\u003d\"registration-container\"\u003e\n      \u003ch1\u003eFootball Team Registration\u003c/h1\u003e\n      \u003cform id\u003d\"team-form\"\u003e\n        \u003ch3\u003eInstructions:\u003c/h3\u003e\n        \u003cp\u003e\n          \u003cstrong style\u003d\"background-color:#FFECB3; padding:2px 4px;\"\u003e1.\u003c/strong\u003e \n          Fill in the \u003cstrong\u003eTeam Name\u003c/strong\u003e and \u003cstrong\u003eSelect the Hall\u003c/strong\u003e first. Please note that only details corresponding to the chosen hall should be filled â€“ both the captain and players must be from the same hall.\n        \u003c/p\u003e\n        \u003cp\u003e\n          \u003cstrong style\u003d\"background-color:#FFECB3; padding:2px 4px;\"\u003e2.\u003c/strong\u003e \n          The venue is tentatively set at the \u003cstrong\u003eHall 10 \u0026amp; 11 Common Yard\u003c/strong\u003e. Depending on the number of teams registered, the final venue and date will be decided after considering resident feedback. To avoid any issues in the future (for example, if we end up playing in the institute football ground), please try to fill in details for all 10 players.\n        \u003c/p\u003e\n        \u003cp\u003e\n          \u003cstrong style\u003d\"background-color:#FFECB3; padding:2px 4px;\"\u003e3.\u003c/strong\u003e \n          After submission, the captain will be contacted for further details.\n        \u003c/p\u003e\n        \u003cp\u003e\n          \u003cstrong style\u003d\"background-color:#FFECB3; padding:2px 4px;\"\u003e4.\u003c/strong\u003e \n          Only the team captain fills out the form.\n        \u003c/p\u003e\n        \u003cp\u003e\n          \u003cstrong style\u003d\"background-color:#FFECB3; padding:2px 4px;\"\u003e5.\u003c/strong\u003e \n          For best results, use a Desktop or Laptop.\n        \u003c/p\u003e\n        \n        \u003ch3\u003eTeam Information:\u003c/h3\u003e\n        \u003clabel for\u003d\"team-name\"\u003eTeam Name:\u003c/label\u003e\n        \u003cinput type\u003d\"text\" id\u003d\"team-name\" placeholder\u003d\"Enter your team name\" required /\u003e\n        \u003clabel for\u003d\"captain-hall\"\u003eSelect Hall:\u003c/label\u003e\n        \u003cselect id\u003d\"captain-hall\" required onchange\u003d\"updateNamesBasedOnHall()\"\u003e\n          \u003coption value\u003d\"10\"\u003eHall 10\u003c/option\u003e\n          \u003coption value\u003d\"11\"\u003eHall 11\u003c/option\u003e\n          \u003coption value\u003d\"14\"\u003eHall 14\u003c/option\u003e\n        \u003c/select\u003e\n        \n        \u003ch3\u003eCaptain Details\u003c/h3\u003e\n        \u003cdiv id\u003d\"captain-row\" class\u003d\"row\"\u003e\n          \u003clabel\u003eName:\u003c/label\u003e\n          \u003cinput type\u003d\"text\" class\u003d\"name-input\" placeholder\u003d\"Type or select a name...\" required /\u003e\n          \u003clabel\u003eRoll Number:\u003c/label\u003e\n          \u003cinput type\u003d\"text\" class\u003d\"roll-input\" placeholder\u003d\"Auto-filled or enter manually\" required /\u003e\n          \u003clabel\u003eRoom Number:\u003c/label\u003e\n          \u003cinput type\u003d\"text\" class\u003d\"room-input\" placeholder\u003d\"Auto-filled or enter manually\" required /\u003e\n          \u003clabel\u003eWhatsApp Number:\u003c/label\u003e\n          \u003cinput type\u003d\"text\" class\u003d\"whatsapp-input\" placeholder\u003d\"Required\" required /\u003e\n          \u003clabel\u003eEmail ID:\u003c/label\u003e\n          \u003cinput type\u003d\"email\" class\u003d\"email-input\" placeholder\u003d\"Required\" required /\u003e\n        \u003c/div\u003e\n        \n        \u003ch3\u003eTeam Members\u003c/h3\u003e\n        \u003cdiv id\u003d\"players-container\"\u003e\u003c/div\u003e\n        \u003cbutton type\u003d\"button\" onclick\u003d\"addPlayerRow()\"\u003eAdd Player\u003c/button\u003e\n        \u003cbr /\u003e\u003cbr /\u003e\n        \u003cbutton type\u003d\"button\" onclick\u003d\"saveTeamData()\"\u003eSubmit\u003c/button\u003e\n      \u003c/form\u003e\n    \u003c/div\u003e\n    \n    \u003c!-- Registered Teams Container --\u003e\n    \u003cdiv id\u003d\"registered-teams-container\"\u003e\n      \u003ch2\u003eRegistered Teams\u003c/h2\u003e\n      \u003cdiv id\u003d\"registered-teams\"\u003e\n        \u003c!-- Aggregated team details will appear here as a list --\u003e\n      \u003c/div\u003e\n      \u003cbutton type\u003d\"button\" onclick\u003d\"loadRegisteredTeams()\"\u003eRefresh Teams\u003c/button\u003e\n    \u003c/div\u003e\n  \u003c/body\u003e\n\u003c/html\u003e\n"},{"id":"51eb51b4-16af-40d5-bec8-1180da2d2c67","name":"css","type":"html","source":"\u003cstyle\u003e\n  /* New Vibrant Colorful Theme with Blurred Splash Background */\n  body {\n    font-family: \u0027Arial\u0027, sans-serif;\n    margin: 0;\n    padding: 0; /* remove extra padding to allow splash screen full view */\n    background-color: #FFF8E1; /* Light yellow */\n    color: #212121;\n  }\n  /* Splash Screen Styles */\n  #splash-screen {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    position: relative;\n    overflow: hidden;\n    text-align: center;\n  }\n  #splash-screen::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(135deg, #B3E5FC, #81D4FA); /* New light blue gradient */\n    filter: blur(5px); /* Slight blur */\n    z-index: -1;\n  }\n  .splash-title {\n    font-size: 3rem;\n    color: #D32F2F;\n    margin-bottom: 20px;\n    animation: fadeIn 2s ease-in-out;\n  }\n  #enter-btn {\n    padding: 15px 30px;\n    font-size: 1.5rem;\n    background-color: #E91E63;\n    color: white;\n    border: none;\n    border-radius: 8px;\n    cursor: pointer;\n    animation: fadeIn 2s ease-in-out;\n  }\n  #enter-btn:hover {\n    background-color: #C2185B;\n  }\n  @keyframes fadeIn {\n    from { opacity: 0; transform: scale(0.8); }\n    to { opacity: 1; transform: scale(1); }\n  }\n  \n  /* Registration Form Container */\n  #registration-container {\n    display: none;\n    padding: 20px;\n    background-color: #FFFFFF;\n    box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n    border-radius: 10px;\n    border: 1px solid #FF9800;\n    margin: 20px;\n  }\n  \n  h1, h3, h2 {\n    text-align: center;\n    color: #D32F2F;\n  }\n  h1 {\n    font-size: 2.5rem;\n    margin-bottom: 20px;\n  }\n  h2 {\n    font-size: 2rem;\n    margin-top: 40px;\n  }\n  h3 {\n    font-size: 1.5rem;\n    margin-top: 5px;\n    color: #D32F2F;\n  }\n  p {\n    text-align: left;\n    font-size: 1.2rem;\n    color: #212121;\n    margin-bottom: 20px;\n  }\n  form {\n    max-width: 900px;\n    margin: 0 auto;\n    padding: 20px;\n    background-color: #FFFFFF;\n    box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n    border-radius: 10px;\n    border: 1px solid #FF9800;\n  }\n  label {\n    font-weight: bold;\n    margin-bottom: 5px;\n    display: block;\n    font-size: 1.2rem;\n    color: #1976D2;\n  }\n  input[type\u003d\"text\"],\n  input[type\u003d\"email\"],\n  select {\n    width: 97%;\n    padding: 10px;\n    margin-bottom: 10px;\n    border: 1px solid #FF9800;\n    border-radius: 5px;\n    font-size: 1rem;\n    background-color: #FFFFFF;\n  }\n  input[type\u003d\"text\"]:focus,\n  input[type\u003d\"email\"]:focus,\n  select:focus {\n    border-color: #FBC02D;\n    outline: none;\n    box-shadow: 0 0 5px rgba(251,192,45,0.5);\n  }\n  button {\n    background-color: #E91E63;\n    color: white;\n    border: none;\n    padding: 10px 20px;\n    border-radius: 5px;\n    cursor: pointer;\n    font-size: 1rem;\n    margin-right: 10px;\n    transition: background-color 0.3s ease;\n  }\n  button:hover {\n    background-color: #C2185B;\n  }\n  button:disabled {\n    background-color: #B0BEC5;\n    cursor: not-allowed;\n  }\n  /* Team Members Section */\n  #players-container {\n    margin-top: 20px;\n  }\n  #players-container .row {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 10px;\n    padding: 10px 0;\n    border-bottom: 1px solid #EEEEEE;\n    background-color: #F5F5F5;\n  }\n  #players-container .row:nth-child(even) {\n    background-color: #E0F7FA;\n  }\n  #players-container .row:last-child {\n    border-bottom: none;\n  }\n  #players-container label {\n    flex: 1 1 12%;\n    text-align: right;\n    padding-right: 10px;\n    font-size: 0.9rem;\n    color: #1976D2;\n  }\n  #players-container input {\n    flex: 1 1 18%;\n    padding: 10px;\n    font-size: 0.9rem;\n    border: 1px solid #FF9800;\n    border-radius: 5px;\n    background-color: #FFFFFF;\n  }\n  #players-container .name-input {\n    flex: 2 1 40%;\n  }\n  #players-container .roll-input,\n  #players-container .room-input {\n    flex: 1 1 12%;\n  }\n  #players-container button {\n    flex: 0 0 8%;\n    padding: 8px 12px;\n    font-size: 0.8rem;\n    background-color: #E64A19;\n    color: white;\n    border-radius: 5px;\n  }\n  #players-container button:hover {\n    background-color: #D84315;\n  }\n  #team-name {\n    width: 100%;\n    padding: 10px;\n    margin-bottom: 20px;\n    border: 1px solid #FF9800;\n    border-radius: 5px;\n    background-color: #FFFFFF;\n  }\n  #team-name:focus {\n    border-color: #FF9800;\n    outline: none;\n    box-shadow: 0 0 5px rgba(251,192,45,0.5);\n  }\n  /* Submit Button */\n  form button {\n    display: block;\n    width: 100%;\n    max-width: 250px;\n    margin: 20px auto;\n    background-color: #E91E63;\n    color: white;\n  }\n  form button:hover {\n    background-color: #C2185B;\n  }\n  /* Registered Teams Section */\n  #registered-teams-container {\n    max-width: 900px;\n    margin: 40px auto 0;\n    padding: 20px;\n    background-color: #FFFFFF;\n    border: 1px solid #FF9800;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n  }\n  .team-item {\n    border: 1px solid #FF9800;\n    padding: 10px;\n    margin-bottom: 10px;\n    border-radius: 5px;\n    background-color: #C5E1A5;\n  }\n  .team-item h3 {\n    margin-top: 0;\n    font-size: 1.5rem;\n  }\n  .team-item ul {\n    margin: 5px 0 0 20px;\n  }\n  @media (max-width: 768px) {\n    #players-container .row {\n      flex-wrap: wrap;\n    }\n    #players-container label,\n    #players-container input,\n    #players-container button,\n    select {\n      flex: 1 1 100%;\n      text-align: left;\n      margin-bottom: 5px;\n    }\n  }\n\u003c/style\u003e\n"}]}